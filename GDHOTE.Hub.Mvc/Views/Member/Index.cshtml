@model List<GDHOTE.Hub.CoreObject.ViewModels.MemberViewModel>
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .table > tbody > tr > td {
        vertical-align: middle !important;
    }

        .table > tbody > tr > td span.alert {
            padding: 3px;
            font-size: 11px;
            font-weight: 500;
        }

    .memberName {
        height: calc(2.125rem + 2px);
        border: 1px solid #d7e4eb;
        background-color: transparent;
        color: black;
        display: block;
        width: 100%;
        padding: 0.5rem 0.75rem;
        line-height: 1.75;
        background-color: #fff;
        background-image: none;
        background-clip: padding-box;
        border: 1px solid rgba(0, 0, 0, 0.15);
        border-radius: 0.25rem;
        transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
    }

    .coy-sear .select2-container {
        display: block !important;
        width: 100% !important;
    }
</style>

<h2>Members</h2>
<br />
<div class="row">
    <div class="form-group col-lg-5">
        <div class="form-group coy-sear">
            @*<label>Type Name or Phone Number</label>*@
            <input type="hidden" id="tbIds" value="" />
            <select name="memberName" class="form-control" id="memberName"></select>
        </div>
    </div>
</div>

    @if (Model == null || Model.Count == 0)
    {
        <p>No record(s) found</p>
    }
    else
    {
        <div id="responsive">
            <div class="form-group">
                @Html.AntiForgeryToken()
            </div>

            <div id='memberList'>
                <div>
                    <table id="members" class="table table-bordered table-hover table-responsive">
                        <thead>
                            <tr>
                                <th>SN</th>
                                <th>Name</th>
                                <th>Gender</th>
                                <th>Martial Status</th>
                                <th>Status</th>
                                <th>Date Of Birth</th>
                                <th>Magus</th>
                                <th>Magus Date</th>
                                <th>Date</th>
                                <th></th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @{ int i = 1; }
                            @foreach (var member in Model)
                            {
                                <tr>
                                    <td>@i</td>  @{ i++; }
                                    <td><button id="btn-member-info" data-notification-id="@member.MemberKey" class="btn btn-link js-action">@member.Surname, @member.FirstName</button></td>
                                    <td>@member.Gender</td>
                                    <td>@member.MaritalStatus</td>
                                    <td>@member.MemberStatus</td>
                                    <td>@(member.DateOfBirth?.Date.ToString("dd-MMM-yyyy")) </td>
                                    <td>@((member.MagusStatus) ? "Y" : "N")</td>
                                    <td>@(member.MagusDate?.Date.ToString("dd-MMM-yyyy")) </td>
                                    <td>@member.DateCreated.ToString("dd-MMM-yyyy")</td>
                                    <td>@Html.ActionLink("Edit", "Edit", "Member", new { id = member.MemberKey }, null)</td>
                                    <td><button data-member-id="@member.MemberKey" class="btn btn-link js-delete">Delete</button></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>

            <div id='memberinfomodal' class='modal hide fade in'>
                <div id='divResult'>
                </div>
            </div>
        </div>
    }

    @section scripts
{
        <script>
        $(document).ready(function () {


               $('#memberName').select2(
        {
            placeholder: 'Enter Member Name or Phone Number',
            //Does the user have to enter any data before sending the ajax request
            minimumInputLength: 4,
            allowClear: true,
            ajax: {
                //How long the user has to pause their typing before sending the next request
                delay: 150,
                //The url of the json service
                url: '@Url.Action("GetUser", "Member")',
                dataType: 'json',
                async: true,
                //Our search term and what page we are on
                data: function (params) {
                    return {
                        pageSize: 100,
                        pageNum: params.page || 1,
                        searchTerm: params.term,
                        //Value from client side.
                        countyId: 'vv'
                    };
                },
                processResults: function (data, params) {
                    params.page = params.page || 1;
                    return {
                        results: $.map(data.Results, function (obj) {
                            return { id: obj.id, text: obj.name };
                        }),
                        pagination: {
                            more: (params.page * 100) <= data.Total
                        }
                    };
                }
            }
        });

            //function proc(obj) {
            //    var ob = [];
            //    $.each(obj, function (i, ch) {
            //        var child = [];
            //        $.each(ch.children, function (i, dt) {
            //            var o = { id: dt.id, text: dt.name }
            //            child.push(o);
            //        });
            //        var op = { text: ch.text, children: child }
            //        ob.push(op);
            //    });
            //    return ob;
            //};


            $("#memberName").change(function () {

                var memberId = $(this).val();
                var url = "/Gdhote/member/GetMemberByID";
                $.get(url, { Id: memberId }, function (data) {

                    $("#memberList").html(data);
                    //$(".loader_wrapper").fadeOut("fast");
                    //$("#quicksearch").prop("disabled", false);
                })
            });





            $("#members").DataTable({
                //dom: 'Bfrtip',
                "bProcessing": true,
                "pageLength": 10,
                "bFilter": true,
                "bInfo": true,
                scrolly: 400,
                lengthMenu: [
                    [10, 25, 50, 100, 500, -1],
                    ['10 records', '25 records', '50 records', '100 records', '500 records', 'Show all']
                ]

            });

           //$("#members").DataTable();

           $("#members").on("click", ".js-action", function () {

                var button = $(this);
                var id = button.attr("data-notification-id");

               var form = $('#responsive');
               var token = $('input[name="__RequestVerificationToken"]', form).val();

               var request = { __RequestVerificationToken: token };

               $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetMemberInfo", "Member")/' + id,
                    data: request,
                    success: function (data) {
                        console.log(data);
                        $('#divResult').html(data);
                        $('#memberinfomodal').removeClass('hide');
                        if (data !== null) {

                        };
                       $('#memberinfomodal').modal({
                                keyboard: true
                            },
                            'show');
                       return false;

                    }
                });
            });

            $("#members").on("click", ".js-delete", function() {
                    var button = $(this);

                    var id = button.attr("data-member-id");

                    var form = $('#responsive');
                    var token = $('input[name="__RequestVerificationToken"]', form).val();

                    //Submit request
                    var request = { __RequestVerificationToken: token };

                    bootbox.confirm("Are you sure you want to proceed?",
                        function(result) {
                            if (result) {
                                $.ajax({
                                    url: '@Url.Action("DeleteMember", "Member")/' + id,
                                    method: "POST",
                                    data: request,
                                    success: function(data) {
                                        if (data !== null) {
                                            if (data.ErrorCode === "00") {
                                                swal({
                                                    title: "Success",
                                                    text: "success",
                                                    type: "success"
                                                });

                                                window.location.reload(true);
                                            } else {
                                                alert(data.ErrorMessage);
                                            }
                                        };

                                    }
                                });
                            }
                        });
           });



        });
        </script>
    }
