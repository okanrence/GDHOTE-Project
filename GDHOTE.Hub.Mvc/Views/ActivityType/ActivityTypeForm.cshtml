@model GDHOTE.Hub.CoreObject.ViewModels.ActivityTypeFormViewModel


@{
    ViewBag.Title = "ActivityTypeForm";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    var pagename = "";
    if (Model != null)
    {
        pagename = Model.ActivityType.ActivityTypeId == 0 ? "New Activity Type" : "Edit Activity Type";
    }

}
<h2>@pagename</h2>
@using (Html.BeginForm("Save", "ActivityType"))
{
    <div>
        @*@Html.ValidationSummary(true, "Please fix the below errors.")*@
        <div class="form-group">
            @Html.LabelFor(a => a.ActivityType.Description)
            @Html.TextBoxFor(a => a.ActivityType.Description, new { @class = "form-control gdhote-text-capitalize" })
            @Html.ValidationMessageFor(a => a.ActivityType.Description)
        </div>
        <div class="form-group">
            @Html.LabelFor(a => a.ActivityType.Status)
            @Html.DropDownListFor(a => a.ActivityType.Status, new SelectList(Model.Status, "Code", "Description"), "Select Status", new { @class = "form-control" })
            @Html.ValidationMessageFor(a => a.ActivityType.Status)
        </div>
        <div class="form-group">
            @Html.LabelFor(a => a.ActivityType.DependencyTypeId)
            @Html.DropDownListFor(a => a.ActivityType.DependencyTypeId, new SelectList(Model.DependencyTypes, "ActivityTypeId", "Description"), "Select Dependency", new { @class = "form-control" })
            @Html.ValidationMessageFor(a => a.ActivityType.DependencyTypeId)
        </div>
        <div class="form-group">
            @Html.HiddenFor(a => a.ActivityType.ActivityTypeId)
        </div>
        <div class="form-group">
            <button type="submit" class="btn btn-primary">Save</button>
        </div>
        <div class="form-group">
            @Html.AntiForgeryToken()
        </div>
    </div>

}