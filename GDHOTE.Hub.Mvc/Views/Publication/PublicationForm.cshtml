@model  GDHOTE.Hub.CoreObject.ViewModels.PublicationFormViewModel
@{
    ViewBag.Title = "PublicationForm";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    var pagename = "";
    if (Model != null)
    {
        pagename = Model.Title == null ? "New Publication" : "Edit Publication";
    }

}
<h2>@pagename</h2>
@using (Html.BeginForm("Save", "Publication"))
{
    <div>
        <span class="text-danger">@ViewBag.ErrorBag</span>
        <div class="form-group">
            @Html.LabelFor(p => p.Title)
            @Html.TextBoxFor(p => p.Title, new { @class = "form-control gdhote-text-capitalize" })
            @Html.ValidationMessageFor(p => p.Title)
        </div>
        <div class="form-group">
            @Html.LabelFor(p => p.Description)
            @Html.TextAreaFor(p => p.Description, new { @class = "form-control gdhote-text-capitalize" })
            @Html.ValidationMessageFor(p => p.Description)
        </div>
        <div class="form-group">
            @Html.LabelFor(p => p.CategoryId)
            @Html.DropDownListFor(p => p.CategoryId, new SelectList(Model.PublicationCategories, "Id", "Name"), "Select Category", new { @class = "form-control" })
            @Html.ValidationMessageFor(p => p.CategoryId)
        </div>
        <div class="form-group">
            @Html.LabelFor(p => p.AccessRightId)
            @Html.DropDownListFor(p => p.AccessRightId, new SelectList(Model.PublicationAccessRights, "Id", "Name"), "Select Access Right", new { @class = "form-control" })
            @Html.ValidationMessageFor(p => p.AccessRightId)
        </div>
        <div class="form-group">
            <button type="submit" class="btn btn-primary">Save</button>
        </div>
        <div class="form-group">
            @Html.AntiForgeryToken()
        </div>
    </div>

}




